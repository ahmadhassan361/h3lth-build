{"version":3,"file":"static/js/105.3e8fd134.chunk.js","mappings":"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","sources":["Pages/AdminPages/ChatAdmin/ChatAdmin.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport \"./ChatAdmin.css\"\r\nimport { useEffect } from 'react'\r\nimport Axios from 'axios';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nfunction ChatAdmin() {\r\n  const [messagein, setMessagein] = useState(\"\");\r\n  const [chatresponsedata, setChatresponsedata] = useState([])\r\n  const [messageresponse, setMessageresponse] = useState(\"\")\r\n  const [Lodingmessage, setLoadingmessage] = useState(false);\r\n  const [getuserdata, setgetuserdata] = useState(\"\");\r\n  const [gettingchatdataparsenew, setgettingchatdataparse] = useState(\"\");\r\n  const [Newobjectdata, setNewobjectdata] = useState({});\r\n\r\n  useEffect(() => {\r\n    const gwttinguserdata = localStorage.getItem(\"userId\");\r\n    const gettingchatdata = localStorage.getItem(\"chatdetail\");\r\n    const gwttinguserdataparse = parseInt(gwttinguserdata);\r\n    const gettingchatdataparsenew = JSON.parse(gettingchatdata);\r\n    setgetuserdata(gwttinguserdataparse);\r\n    setgettingchatdataparse(gettingchatdataparsenew)\r\n  }, [])\r\n\r\n  console.log(\"gettingchatdataparsenew\", gettingchatdataparsenew)\r\n\r\n  const handlePostRequest = async () => {\r\n    setLoadingmessage(true);\r\n    try {\r\n      // Generate dynamic data here\r\n      const postData = {\r\n        userId: getuserdata,\r\n        chat: gettingchatdataparsenew?.request_chat_id,\r\n        doctor: gettingchatdataparsenew?.request?.doctors[0],\r\n        doctor_question: messagein,\r\n        response_type: \"doctor\"\r\n      };\r\n\r\n      const response = await Axios.post('https://api.backend.h3lth.net/doctor-chat/api/thread/doctorpost', postData);\r\n      console.log('Response from server:', response.data);\r\n      setMessageresponse(response.data)\r\n      setMessagein(\"\")\r\n      setLoadingmessage(false);\r\n      // Handle the response as needed\r\n    } catch (error) {\r\n      console.error('Error making POST request:', error.message);\r\n      setLoadingmessage(false);\r\n      // Handle the error as needed\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleGetRequest = async () => {\r\n      try {\r\n        const response = await Axios.get(`https://api.backend.h3lth.net/doctor-chat/api/thread/doctorget?chatId=${gettingchatdataparsenew?.request_chat_id}&doctor=${gettingchatdataparsenew?.request?.doctors[0]}`);\r\n        console.log('Response from server:', response.data.data);\r\n        setChatresponsedata(response.data.data);\r\n        // setResponseData(response.data);\r\n        // Handle the response as needed\r\n      } catch (error) {\r\n        console.error('Error making GET request:', error.message);\r\n        // Handle the error as needed\r\n      }\r\n    };\r\n    handleGetRequest();\r\n    const intervalId = setInterval(() => {\r\n      handleGetRequest();\r\n    }, 2000);\r\n    return () => clearInterval(intervalId);\r\n  }, [messageresponse, gettingchatdataparsenew?.request?.doctors[0], gettingchatdataparsenew?.request_chat_id])\r\n\r\n\r\n  useEffect(() => {\r\n    const localdata = localStorage.getItem(\"userviewticket\");\r\n    setNewobjectdata(JSON.parse(localdata))\r\n  }, [])\r\n\r\n\r\n  console.log(\"chatresponsedata\", chatresponsedata);\r\n  console.log(\"Newobjectdata\", Newobjectdata)\r\n\r\n\r\n  return (\r\n    <div className='col-md-12 background_chat_main'>\r\n      <div className='row px-3 py-4'>\r\n        <div className='col-md-12 height_of_chat2'>\r\n          <div className='col-md-12 background_chat_head'>\r\n            <div className='col-md-12 py-2'>\r\n              <div className='row'>\r\n                <div className='col-md-1 px-0'>\r\n                  <img className='img-fluid rounded-circle  img_height_width' src='/images/avatar.webp' />\r\n                </div>\r\n                <div className='col-md-9 pt-4 px-0'> <p className='m-0 p-0 name_person'> {gettingchatdataparsenew?.request?.request?.mainuser?.user?.name} </p></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-12 background_chat_head mt-2'>\r\n            <div className='col-md-12 py-2'>\r\n              <div className='row'>\r\n                <div className='col-md-3 px-0'> <p className='m-0 p-0 name_person'>Gender :</p><span>\r\n                  {Newobjectdata?.request?.is_sub_user === false ?\r\n                    <>{Newobjectdata?.request?.mainuser?.gender} </> :\r\n                    <>{Newobjectdata?.request?.user?.gender} </>\r\n                  }\r\n                </span></div>\r\n                <div className='col-md-3 px-0'> <p className='m-0 p-0 name_person'>Date & Time :</p><span>\r\n                  <Moment format=\"YYYY-MM-DD / HH:mm:ss A\" >\r\n                    {Newobjectdata?.created_date}\r\n                  </Moment>\r\n                </span></div>\r\n                <div className='col-md-3 px-0'> <p className='m-0 p-0 name_person'>Form Title :</p><span>\r\n                  {Newobjectdata?.request?.form?.title}\r\n                </span></div>\r\n                <div className='col-md-3 px-0'> <p className='m-0 p-0 name_person'>Height :</p><span>\r\n                  {Newobjectdata?.request?.is_sub_user === false ?\r\n                    <>{Newobjectdata?.request?.mainuser?.height} {Newobjectdata?.request?.mainuser?.height_unit} </> :\r\n                    <>{Newobjectdata?.request?.user?.height} {Newobjectdata?.request?.user?.height_unit} </>\r\n                  }\r\n                </span></div>\r\n                <div className='col-md-3 mt-2 px-0'> <p className='m-0 p-0 name_person'>Catagory :</p><span> {Newobjectdata?.request?.form?.category?.title}</span></div>\r\n                <div className='col-md-3 mt-2 px-0'> <p className='m-0 p-0 name_person'>Weight :</p><span>\r\n                  {Newobjectdata?.request?.is_sub_user === false ?\r\n                    <>{Newobjectdata?.request?.mainuser?.weight} {Newobjectdata?.request?.mainuser?.weight_unit}</> :\r\n                    <>{Newobjectdata?.request?.user?.weight} {Newobjectdata?.request?.user?.weight_unit}</>\r\n                  }\r\n                </span></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-12 height_of_msg py-4 px-0' id='style-3'>\r\n            {chatresponsedata?.map((index, item) => {\r\n              console.log(\"indexx12\", index)\r\n              return (\r\n                <>\r\n                  {index?.patient_answer &&\r\n                    <div className='row'>\r\n                      <div className='col-md-6'>\r\n                        <h6 className='mt-2 bg-white px-3 py-2 rounded-pill'>{index.patient_answer}</h6>\r\n                      </div>\r\n                      <div className='col-md-6'>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                  {index?.doctor_question &&\r\n                    <div className='row'>\r\n                      <div className='col-md-6'>\r\n                      </div>\r\n                      <div className='col-md-6 text-right'>\r\n                        <h6 className=' mt-2 rounded-pill '><span className='color_blue_text px-3 py-1 mt-3 rounded-pill' >{index?.doctor_question}</span></h6>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                </>\r\n              )\r\n            })}\r\n\r\n          </div>\r\n          <div className='col-md-12 bg-white py-2 input_bottom d-flex'>\r\n            <input className='form-control new_place_holder w-100' value={messagein} onChange={(e) => setMessagein(e.target.value)} placeholder='Enter message here' />\r\n            <button className='btn btn-primary ml-2' onClick={handlePostRequest}>{Lodingmessage === false ? <i class=\"fas fa-paper-plane\"></i> :\r\n              <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            }</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatAdmin","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","messagein","setMessagein","chatresponsedata","setChatresponsedata","messageresponse","setMessageresponse","Lodingmessage","setLoadingmessage","getuserdata","setgetuserdata","gettingchatdataparsenew","setgettingchatdataparse","Newobjectdata","setNewobjectdata","useEffect","gwttinguserdata","localStorage","getItem","gettingchatdata","gwttinguserdataparse","parseInt","JSON","parse","console","log","handlePostRequest","postData","userId","chat","request_chat_id","doctor","request","doctors","doctor_question","response_type","Axios","response","data","error","message","handleGetRequest","intervalId","setInterval","clearInterval","localdata","className","src","mainuser","user","name","is_sub_user","gender","format","created_date","form","title","height","height_unit","category","weight","weight_unit","id","map","index","item","patient_answer","value","onChange","e","target","placeholder","onClick","class","role","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}