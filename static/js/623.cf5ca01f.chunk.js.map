{"version":3,"file":"static/js/623.cf5ca01f.chunk.js","mappings":"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","sources":["Pages/Auth/Headerauth/Headerauth.js","../node_modules/src/index.tsx","Pages/Auth/Mobileotp/Mobileotp.js","webpack://acadify_saas_frontend/./src/Shared/Button/style.module.scss?ba54","Shared/Button/Button.jsx","webpack://acadify_saas_frontend/./src/Shared/InputField/style.module.scss?5e45","Shared/InputField/InputField.jsx","Shared/InputField/index.js"],"sourcesContent":["import React from 'react'\r\nimport './Headerauth.scss'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\n\r\nfunction Headerauth() {\r\n  let history = useHistory()\r\n  return (\r\n    <div className=\"col-md-12 padding_mobile background_login \">\r\n      {/* // <div\r\n    // onClick={() =>\r\n    //   history.push(`/`)\r\n    // }\r\n    // className='col-sm-12 px-md-5 px-3 pt-4 pb-4 border_bottom_header fixed-top'>\r\n    //     <img src='../images/logo.png' className='img-fluid img_width' />\r\n    //     </div> */}\r\n      <div className=\"col-md-12 background_color_header_public11 py-4 navigation_for_laptop\">\r\n        <div className=\"col-md-12 custome_main_setting_for_every_page \">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-1\">\r\n            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n              <img className=\"img-fluid logo_width\" src=\"../images/logo.png\" />\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6 text-center m-auto\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                <Link to=\"/\" style={{ textDecoration: \"none\", color:\"black\" }}>\r\n                  <p className=\"mb-0 font_header\">Home</p>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                <Link to=\"/\" style={{ textDecoration: \"none\", color:\"black\" }}>\r\n                  <p className=\"mb-0 font_header\">How it work</p>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                <Link to=\"/\" style={{ textDecoration: \"none\", color:\"black\" }}>\r\n                  <p className=\"mb-0 font_header\">About Us</p>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                <Link to=\"/getintouch\" style={{ textDecoration: \"none\", color:\"black\" }}>\r\n                  <p className=\"mb-0 font_header\">Contact Us</p>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-5 m-auto text-right\">\r\n              <img className=\"img-fluid\" src=\"../images/avatar.png\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Mobile Navigation  */}\r\n      <div className=\"col-md-12 px-0  navigation_for_mobile\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 px-0 col-6\">\r\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n            <img\r\n              className=\"img-fluid logo_width_for_mobile\"\r\n              src=\"../images/logo.png\"\r\n            />\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-md-6 px-0 col-6 text-right\">\r\n            <button className=\"btn btn-light\">\r\n              <i class=\"fas fa-bars\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Headerauth\r\n","import React from 'react';\n\ntype AllowedInputTypes = 'password' | 'text' | 'number' | 'tel';\n\ntype InputProps = Required<\n  Pick<\n    React.InputHTMLAttributes<HTMLInputElement>,\n    | 'value'\n    | 'onChange'\n    | 'onFocus'\n    | 'onBlur'\n    | 'onKeyDown'\n    | 'onPaste'\n    | 'aria-label'\n    | 'maxLength'\n    | 'autoComplete'\n    | 'style'\n  > & {\n    ref: React.RefCallback<HTMLInputElement>;\n    placeholder: string | undefined;\n    className: string | undefined;\n    type: AllowedInputTypes;\n  }\n>;\n\ninterface OTPInputProps {\n  /** Value of the OTP input */\n  value?: string;\n  /** Number of OTP inputs to be rendered */\n  numInputs?: number;\n  /** Callback to be called when the OTP value changes */\n  onChange: (otp: string) => void;\n  /** Function to render the input */\n  renderInput: (inputProps: InputProps, index: number) => React.ReactNode;\n  /** Whether the first input should be auto focused */\n  shouldAutoFocus?: boolean;\n  /** Placeholder for the inputs */\n  placeholder?: string;\n  /** Function to render the separator */\n  renderSeparator?: ((index: number) => React.ReactNode) | React.ReactNode;\n  /** Style for the container */\n  containerStyle?: React.CSSProperties | string;\n  /** Style for the input */\n  inputStyle?: React.CSSProperties | string;\n  /** The type that will be passed to the input being rendered */\n  inputType?: AllowedInputTypes;\n}\n\nconst isStyleObject = (obj: unknown) => typeof obj === 'object' && obj !== null;\n\nconst OTPInput = ({\n  value = '',\n  numInputs = 4,\n  onChange,\n  renderInput,\n  shouldAutoFocus = false,\n  inputType = 'text',\n  renderSeparator,\n  placeholder,\n  containerStyle,\n  inputStyle,\n}: OTPInputProps) => {\n  const [activeInput, setActiveInput] = React.useState(0);\n  const inputRefs = React.useRef<Array<HTMLInputElement | null>>([]);\n\n  const getOTPValue = () => (value ? value.toString().split('') : []);\n\n  const isInputNum = inputType === 'number' || inputType === 'tel';\n\n  React.useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, numInputs);\n  }, [numInputs]);\n\n  React.useEffect(() => {\n    if (shouldAutoFocus) {\n      inputRefs.current[0]?.focus();\n    }\n  }, [shouldAutoFocus]);\n\n  const getPlaceholderValue = () => {\n    if (typeof placeholder === 'string') {\n      if (placeholder.length === numInputs) {\n        return placeholder;\n      }\n\n      if (placeholder.length > 0) {\n        console.error('Length of the placeholder should be equal to the number of inputs.');\n      }\n    }\n    return undefined;\n  };\n\n  const isInputValueValid = (value: string) => {\n    const isTypeValid = isInputNum ? !isNaN(Number(value)) : typeof value === 'string';\n    return isTypeValid && value.trim().length === 1;\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    if (isInputValueValid(value)) {\n      changeCodeAtFocus(value);\n      focusInput(activeInput + 1);\n    } else {\n      const { nativeEvent } = event;\n      // @ts-expect-error - This was added previosly to handle and edge case\n      // for dealing with keyCode \"229 Unidentified\" on Android. Check if this is\n      // still needed.\n      if (nativeEvent.data === null && nativeEvent.inputType === 'deleteContentBackward') {\n        event.preventDefault();\n        changeCodeAtFocus('');\n        focusInput(activeInput - 1);\n      }\n    }\n  };\n\n  const handleFocus = (event: React.FocusEvent<HTMLInputElement>) => (index: number) => {\n    setActiveInput(index);\n    event.target.select();\n  };\n\n  const handleBlur = () => {\n    setActiveInput(activeInput - 1);\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const otp = getOTPValue();\n    if ([event.code, event.key].includes('Backspace')) {\n      event.preventDefault();\n      changeCodeAtFocus('');\n      focusInput(activeInput - 1);\n    } else if (event.code === 'Delete') {\n      event.preventDefault();\n      changeCodeAtFocus('');\n    } else if (event.code === 'ArrowLeft') {\n      event.preventDefault();\n      focusInput(activeInput - 1);\n    } else if (event.code === 'ArrowRight') {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    }\n    // React does not trigger onChange when the same value is entered\n    // again. So we need to focus the next input manually in this case.\n    else if (event.key === otp[activeInput]) {\n      event.preventDefault();\n      focusInput(activeInput + 1);\n    } else if (\n      event.code === 'Spacebar' ||\n      event.code === 'Space' ||\n      event.code === 'ArrowUp' ||\n      event.code === 'ArrowDown'\n    ) {\n      event.preventDefault();\n    } else if (isInputNum && !isInputValueValid(event.key)) {\n      event.preventDefault();\n    }\n  };\n\n  const focusInput = (index: number) => {\n    const activeInput = Math.max(Math.min(numInputs - 1, index), 0);\n\n    if (inputRefs.current[activeInput]) {\n      inputRefs.current[activeInput]?.focus();\n      inputRefs.current[activeInput]?.select();\n      setActiveInput(activeInput);\n    }\n  };\n\n  const changeCodeAtFocus = (value: string) => {\n    const otp = getOTPValue();\n    otp[activeInput] = value[0];\n    handleOTPChange(otp);\n  };\n\n  const handleOTPChange = (otp: Array<string>) => {\n    const otpValue = otp.join('');\n    onChange(otpValue);\n  };\n\n  const handlePaste = (event: React.ClipboardEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    const otp = getOTPValue();\n    let nextActiveInput = activeInput;\n\n    // Get pastedData in an array of max size (num of inputs - current position)\n    const pastedData = event.clipboardData\n      .getData('text/plain')\n      .slice(0, numInputs - activeInput)\n      .split('');\n\n    // Prevent pasting if the clipboard data contains non-numeric values for number inputs\n    if (isInputNum && pastedData.some((value) => isNaN(Number(value)))) {\n      return;\n    }\n\n    // Paste data from focused input onwards\n    for (let pos = 0; pos < numInputs; ++pos) {\n      if (pos >= activeInput && pastedData.length > 0) {\n        otp[pos] = pastedData.shift() ?? '';\n        nextActiveInput++;\n      }\n    }\n\n    focusInput(nextActiveInput);\n    handleOTPChange(otp);\n  };\n\n  return (\n    <div\n      style={Object.assign({ display: 'flex', alignItems: 'center' }, isStyleObject(containerStyle) && containerStyle)}\n      className={typeof containerStyle === 'string' ? containerStyle : undefined}\n    >\n      {Array.from({ length: numInputs }, (_, index) => index).map((index) => (\n        <React.Fragment key={index}>\n          {renderInput(\n            {\n              value: getOTPValue()[index] ?? '',\n              placeholder: getPlaceholderValue()?.[index] ?? undefined,\n              ref: (element) => (inputRefs.current[index] = element),\n              onChange: handleChange,\n              onFocus: (event) => handleFocus(event)(index),\n              onBlur: handleBlur,\n              onKeyDown: handleKeyDown,\n              onPaste: handlePaste,\n              autoComplete: 'off',\n              maxLength: 1,\n              'aria-label': `Please enter OTP character ${index + 1}`,\n              style: Object.assign(\n                { width: '1em', textAlign: 'center' } as const,\n                isStyleObject(inputStyle) && inputStyle\n              ),\n              className: typeof inputStyle === 'string' ? inputStyle : undefined,\n              type: inputType,\n            },\n            index\n          )}\n          {index < numInputs - 1 && (typeof renderSeparator === 'function' ? renderSeparator(index) : renderSeparator)}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n\nexport default OTPInput;\n","import React, { useState } from \"react\";\r\nimport { Form, FormikProvider, useFormik } from \"formik\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { loginUser, verifyotp } from \"../../../Store/Auth/actions\";\r\nimport Button from \"../../../Shared/Button/Button\";\r\nimport InputField from \"../../../Shared/InputField\";\r\nimport Headerauth from \"../Headerauth/Headerauth\";\r\nimport \"../Login/Login.scss\";\r\nimport OtpInput from \"react-otp-input\";\r\n\r\nexport default function Mobileotp(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [otp, setOtp] = useState(\"\");\r\n  const [tabswitch, setTabswitch] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const getuseremail = useSelector((state) => state.Auth?.user.email);\r\n  console.log(\"new console\", otp.length);\r\n  const handleclick = () => {\r\n    setTabswitch(!tabswitch);\r\n  };\r\n  let numberotp = parseInt(otp);\r\n  const handleInputChange = (event) => {\r\n    setOtp(event.target.value);\r\n  };\r\n  const handlesumbitttt = () => {\r\n    dispatch(\r\n      verifyotp({\r\n        email: getuseremail,\r\n        code: otp,\r\n        setIsLoading,\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"col-sm-12 background_color_login_signup\">\r\n      <div className=\"col-sm-12\">\r\n        <Headerauth />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 m-auto\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2\"></div>\r\n\r\n              <>\r\n                <div className=\"col-md-8\">\r\n                  <div className=\"col-md-12 px-0 pt-3\">\r\n                    <h1>\r\n                      <b className=\"name_Qa\">Email Verification</b>\r\n                    </h1>\r\n                    <h6 className=\"py-3 subname_qa\">\r\n                      Enter Email Verification Code{\" \"}\r\n                      {/* <span className=\"code_exp_text\">34s</span> */}\r\n                    </h6>\r\n                  </div>\r\n                  <div className=\"col-md-12 \">\r\n                    <form className=\"row\">\r\n                      <div className=\"col-md-9 background_color_otp pb-3 \">\r\n                        <h6 className=\"py-3 subname_qa otp_field_label_text_color\">\r\n                          Enter Email Verification Code\r\n                        </h6>\r\n                        <div className=\"col-md-12 px-0\">\r\n                          <OtpInput\r\n                            style={{ width: \"100%\" }}\r\n                            value={otp}\r\n                            onChange={setOtp}\r\n                            className=\"input_style\"\r\n                            numInputs={6}\r\n                            renderSeparator={<span>&nbsp;&nbsp;&nbsp;</span>}\r\n                            renderInput={(props) => <input {...props} />}\r\n                          />\r\n                          {/* <input\r\n                            className=\"form-control w-100\"\r\n                            type=\"number\"\r\n                            onChange={handleInputChange}\r\n                            value={otp}\r\n                          /> */}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-md-9 mt-3\">\r\n                        <div className=\"row pt-2\">\r\n                          {otp.length === 6 ? (\r\n                            <button\r\n                              onClick={(event) => {\r\n                                event.preventDefault();\r\n                                handlesumbitttt();\r\n                              }}\r\n                              className=\"btn btn-info w-100 button_style_padding\"\r\n                            >\r\n                              {isLoading ? (\r\n                            <div\r\n                              class=\"spinner-border text-light\"\r\n                              role=\"status\"\r\n                            >\r\n                              <span class=\"sr-only\">Loading...</span>\r\n                            </div>\r\n                          ) : (\r\n                            <span>Continue</span>\r\n                          )}\r\n                            </button>\r\n                          ) : (\r\n                            <button\r\n                              disabled\r\n                              className=\"btn btn-info w-100 button_style_padding_disabled\"\r\n                            >\r\n                              Continue\r\n                            </button>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </form>\r\n                  </div>\r\n                </div>\r\n              </>\r\n\r\n              <div className=\"col-md-2\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6 pt-5 display_sidepannel_none\">\r\n          <h1 className=\"pt-5\">\r\n            <b>Security Verification</b>\r\n          </h1>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <h6>\r\n                Enter Security cord for registration. We will provide you\r\n                assistance in all health related problems\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 pt-3\">\r\n            <img className=\"img-fluid\" src=\"../images/otp.png\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btnDesign\":\"style_btnDesign__lfXDz\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport default function Button(props) {\r\n  const {\r\n    className,\r\n    onHandleClick,\r\n    children,\r\n    variant,\r\n    color,\r\n    type,\r\n    size,\r\n    shape,\r\n    isLoading,\r\n    ...rest\r\n  } = props;\r\n\r\n  const styleClass = classNames(\r\n    `btn ${styles.btnDesign}`,\r\n    variant ? `btn-${variant}-${color}` : `btn-${color}`,\r\n    { [`btn-${size}`]: size },\r\n    shape,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <button\r\n      className={styleClass}\r\n      type={type}\r\n      disabled={isLoading}\r\n      onClick={onHandleClick}\r\n      {...rest}\r\n    >\r\n      {isLoading ? <div class=\"spinner-border\" role=\"status\" /> : children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  onHandleClick: PropTypes.func,\r\n  children: PropTypes.node.isRequired,\r\n  color: PropTypes.string,\r\n  shape: PropTypes.string,\r\n  isLoading: PropTypes.bool,\r\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  variant: PropTypes.oneOf([\"outline\", \"ghost\"]),\r\n};\r\nButton.defaultProps = {\r\n  className: \"\",\r\n  variant: null,\r\n  size: null,\r\n  isLoading: false,\r\n  onHandleClick: () => {},\r\n  color: \"primary\",\r\n  type: \"button\",\r\n  shape: \"rounded-1\",\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputFormDiv\":\"style_inputFormDiv__xrwqt\",\"inputDesign\":\"style_inputDesign__RI4YD\",\"errorMessage\":\"style_errorMessage__ODQ9b\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Text from \"../Text\";\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport default function InputField(props) {\r\n  const {\r\n    placeholder,\r\n    type,\r\n    onHandleChange,\r\n    value,\r\n    name,\r\n    className,\r\n    error,\r\n    disabled,\r\n    helpertext,\r\n    inputFormDiv,\r\n  } = props;\r\n\r\n  return (\r\n    <div className={`${styles.inputFormDiv} ${inputFormDiv}`}>\r\n      <input\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className={`${styles.inputDesign} ${className}`}\r\n        disabled={disabled}\r\n        onChange={onHandleChange}\r\n        value={value}\r\n      />\r\n      {error ? <Text className={styles.errorMessage}>{helpertext}</Text> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nInputField.propTypes = {\r\n  placeholder: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  inputFormDiv: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  helpertext: PropTypes.string,\r\n  error: PropTypes.bool,\r\n  onHandleChange: PropTypes.func,\r\n  type: PropTypes.string,\r\n  value: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nInputField.defaultProps = {\r\n  placeholder: \"\",\r\n  type: \"\",\r\n  value: \"\",\r\n  name: \"\",\r\n  inputFormDiv: \"\",\r\n  onHandleChange: () => {},\r\n  className: null,\r\n  disabled: null,\r\n  helpertext: null,\r\n  error: true,\r\n};\r\n","import InputField from \"./InputField\";\r\n\r\nexport default InputField;\r\n"],"names":["useHistory","className","to","style","textDecoration","src","color","class","isStyleObject","obj","OTPInput","value","numInputs","onChange","renderInput","shouldAutoFocus","inputType","renderSeparator","placeholder","containerStyle","inputStyle","activeInput","setActiveInput","inputRefs","getOTPValue","toString","split","isInputNum","current","slice","focus","getPlaceholderValue","length","console","error","isInputValueValid","isNaN","Number","trim","handleChange","event","target","changeCodeAtFocus","focusInput","nativeEvent","data","preventDefault","handleBlur","handleKeyDown","otp","code","key","includes","index","Math","max","min","select","handleOTPChange","otpValue","join","handlePaste","nextActiveInput","pastedData","clipboardData","getData","some","pos","shift","Object","assign","display","alignItems","undefined","Array","from","_","map","ref","element","onFocus","handleFocus","onBlur","onKeyDown","onPaste","autoComplete","maxLength","width","textAlign","type","Mobileotp","props","useState","isLoading","setIsLoading","setOtp","dispatch","useDispatch","getuseremail","useSelector","state","Auth","user","email","log","parseInt","Headerauth","onClick","verifyotp","role","disabled","Button","onHandleClick","children","variant","size","shape","rest","styleClass","classNames","styles","defaultProps","InputField","onHandleChange","name","helpertext","inputFormDiv","Text"],"sourceRoot":""}