{"version":3,"file":"static/js/105.765bbc24.chunk.js","mappings":"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","sources":["Pages/AdminPages/ChatAdmin/ChatAdmin.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport \"./ChatAdmin.css\"\r\nimport { useEffect } from 'react'\r\nimport Axios from 'axios';\r\n\r\nfunction ChatAdmin() {\r\n  const [messagein, setMessagein] = useState(\"\");\r\n  const [chatresponsedata, setChatresponsedata] = useState([])\r\n  const [messageresponse, setMessageresponse] = useState(\"\")\r\n  const [Lodingmessage, setLoadingmessage] = useState(false);\r\n  const [getuserdata, setgetuserdata] = useState(\"\");\r\n  const [gettingchatdataparsenew, setgettingchatdataparse] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const gwttinguserdata = localStorage.getItem(\"userId\");\r\n    const gettingchatdata = localStorage.getItem(\"chatdetail\");\r\n    const gwttinguserdataparse = parseInt(gwttinguserdata);\r\n    const gettingchatdataparsenew = JSON.parse(gettingchatdata);\r\n    setgetuserdata(gwttinguserdataparse);\r\n    setgettingchatdataparse(gettingchatdataparsenew)\r\n  }, [])\r\n\r\n  console.log(\"gettingchatdataparsenew\", gettingchatdataparsenew)\r\n\r\n  const handlePostRequest = async () => {\r\n    setLoadingmessage(true);\r\n    try {\r\n      // Generate dynamic data here\r\n      const postData = {\r\n        userId: getuserdata,\r\n        chat: gettingchatdataparsenew?.request_chat_id,\r\n        doctor: gettingchatdataparsenew?.request?.doctors[0],\r\n        doctor_question: messagein,\r\n        response_type: \"doctor\"\r\n      };\r\n\r\n      const response = await Axios.post('https://api.backend.h3lth.net/doctor-chat/api/thread/doctorpost', postData);\r\n      console.log('Response from server:', response.data);\r\n      setMessageresponse(response.data)\r\n      setMessagein(\"\")\r\n      setLoadingmessage(false);\r\n      // Handle the response as needed\r\n    } catch (error) {\r\n      console.error('Error making POST request:', error.message);\r\n      setLoadingmessage(false);\r\n      // Handle the error as needed\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleGetRequest = async () => {\r\n      try {\r\n        const response = await Axios.get(`https://api.backend.h3lth.net/doctor-chat/api/thread/doctorget?chatId=${gettingchatdataparsenew?.request_chat_id}&doctor=${gettingchatdataparsenew?.request?.doctors[0]}`);\r\n        console.log('Response from server:', response.data.data);\r\n        setChatresponsedata(response.data.data);\r\n        // setResponseData(response.data);\r\n        // Handle the response as needed\r\n      } catch (error) {\r\n        console.error('Error making GET request:', error.message);\r\n        // Handle the error as needed\r\n      }\r\n    };\r\n    handleGetRequest();\r\n    const intervalId = setInterval(() => {\r\n      handleGetRequest();\r\n    }, 2000);\r\n    return () => clearInterval(intervalId);\r\n  }, [messageresponse, gettingchatdataparsenew?.request?.doctors[0], gettingchatdataparsenew?.request_chat_id])\r\n\r\n  console.log(\"chatresponsedata\", chatresponsedata);\r\n\r\n\r\n  return (\r\n    <div className='col-md-12 background_chat_main'>\r\n      <div className='row px-3 py-4'>\r\n        <div className='col-md-12 height_of_chat2'>\r\n          <div className='col-md-12 background_chat_head'>\r\n            <div className='col-md-12 py-2'>\r\n              <div className='row'>\r\n                <div className='col-md-1 px-0'>\r\n                  <img className='img-fluid rounded-circle  img_height_width' src='/images/avatar.webp' />\r\n                </div>\r\n                <div className='col-md-9 pt-4 px-0'> <p className='m-0 p-0 name_person'> {gettingchatdataparsenew?.request?.request?.mainuser?.user?.name} </p></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-12 height_of_msg py-4 px-0' id='style-3'>\r\n            {chatresponsedata?.map((index, item) => {\r\n              console.log(\"indexx12\", index)\r\n              return (\r\n                <>\r\n                  {index?.patient_answer &&\r\n                    <div className='row'>\r\n                      <div className='col-md-6'>\r\n                        <h6 className='mt-2 bg-white px-3 py-2 rounded-pill'>{index.patient_answer}</h6>\r\n                      </div>\r\n                      <div className='col-md-6'>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                  {index?.doctor_question &&\r\n                    <div className='row'>\r\n                      <div className='col-md-6'>\r\n                      </div>\r\n                      <div className='col-md-6 text-right'>\r\n                        <h6 className=' mt-2 rounded-pill '><span className='color_blue_text px-3 py-1 mt-3 rounded-pill' >{index?.doctor_question}</span></h6>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                </>\r\n              )\r\n            })}\r\n\r\n          </div>\r\n          <div className='col-md-12 bg-white py-2 input_bottom d-flex'>\r\n            <input className='form-control new_place_holder' value={messagein} onChange={(e) => setMessagein(e.target.value)} placeholder='Enter message here' />\r\n            <button className='btn btn-primary ml-2' onClick={handlePostRequest}>{Lodingmessage === false ? <i class=\"fas fa-paper-plane\"></i> :\r\n              <div className=\"spinner-grow spinner-grow-sm\" role=\"status\">\r\n                <span className=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            }</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatAdmin","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","messagein","setMessagein","chatresponsedata","setChatresponsedata","messageresponse","setMessageresponse","Lodingmessage","setLoadingmessage","getuserdata","setgetuserdata","gettingchatdataparsenew","setgettingchatdataparse","useEffect","gwttinguserdata","localStorage","getItem","gettingchatdata","gwttinguserdataparse","parseInt","JSON","parse","console","log","handlePostRequest","postData","userId","chat","request_chat_id","doctor","request","doctors","doctor_question","response_type","Axios","response","data","error","message","handleGetRequest","intervalId","setInterval","clearInterval","className","src","mainuser","user","name","id","map","index","item","patient_answer","value","onChange","e","target","placeholder","onClick","class","role","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}