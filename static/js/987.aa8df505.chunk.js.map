{"version":3,"file":"static/js/987.aa8df505.chunk.js","mappings":"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","sources":["Pages/AdminPages/addAdviser/index.js","webpack://acadify_saas_frontend/./src/Shared/Button/style.module.scss?ba54","Shared/Button/Button.jsx","webpack://acadify_saas_frontend/./src/Shared/InputField/style.module.scss?5e45","Shared/InputField/InputField.jsx","Shared/InputField/index.js","Shared/SelectField/SelectField.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Form, FormikProvider, useFormik } from \"formik\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport InputField from \"../../../Shared/InputField\";\r\nimport \"./Dashboard.scss\";\r\nimport SelectField from \"../../../Shared/SelectField/SelectField\";\r\nimport Button from \"../../../Shared/Button/Button\";\r\nimport {\r\n  updateAdviser,\r\n  addAdviserCall,\r\n  getAllDropdownValueAdviser,\r\n  getSingleAdviser,\r\n} from \"../../../Store/Adviser/actions\";\r\nimport DatePicker from \"react-date-picker\";\r\nimport \"react-date-picker/dist/DatePicker.css\";\r\nimport HeaderAdmin from \"../HeaderAdmin/HeaderAdmin\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function AddAdviserPage() {\r\n  const dispatch = useDispatch();\r\n  const user = useParams();\r\n  let history = useHistory();\r\n\r\n  const adviserDropdownValues = useSelector(\r\n    (state) => state.Adviser?.adviserDropdown\r\n  );\r\n  const adviser = useSelector((state) => state.Adviser?.singleAdviser);\r\n  const [badgesState, setBadgesState] = useState(\"\");\r\n  const [expertiseState, setExpertiseState] = useState(\"\");\r\n  const [preferedDealSizeState, setPreferedDealSizeState] = useState(\"\");\r\n  const [yesterdayDay, setYesterdayDay] = useState();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllDropdownValueAdviser());\r\n    if (user.id) {\r\n      dispatch(getSingleAdviser(user.id));\r\n    }\r\n  }, []);\r\n\r\n  const loginUserSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Please enter valid email address\")\r\n      .required(\"Please enter email address\"),\r\n    name: Yup.string().required(\"Please enter name\"),\r\n    badges: Yup.mixed().required(\"Please enter badges\"),\r\n    intro: Yup.string().required(\"Please enter intro\"),\r\n    location: Yup.string().required(\"Please enter location\"),\r\n    responseRate: Yup.string().required(\"Please enter response rate\"),\r\n    responseTime: Yup.string().required(\"Please enter response time\"),\r\n    dealsAquired: Yup.string().required(\"Please enter deals aquired\"),\r\n    preferedDealSize: Yup.mixed().required(\"Please enter prefered deal size\"),\r\n    onNamiSince: Yup.string().required(\"Please enter onNamiSince\"),\r\n    dealsClosed: Yup.string().required(\"Please enter deals closed\"),\r\n    expertise: Yup.mixed().required(\"Please enter expertise\"),\r\n    shortBio: Yup.string().required(\"Please enter short bio\"),\r\n    linkedIn: Yup.string()\r\n      .matches(\r\n        /^(http(s)?:\\/\\/)?([\\w]+\\.)?linkedin\\.com\\/(pub|in|profile)/,\r\n        \"Invalid Pattern\"\r\n      )\r\n      .required(\"Please enter linkedIn\"),\r\n    website: Yup.string()\r\n      .matches(\r\n        /^https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)$/,\r\n        \"Invalid Pattern\"\r\n      )\r\n      .required(\"Please enter website\"),\r\n    otherExperience: Yup.string().required(\"Please enter other experience\"),\r\n    imageUrl: Yup.string().when(\"user.id\", {\r\n      is: false,\r\n      then: Yup.string().required(\"Please enter other profile image\"),\r\n    }),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: adviser,\r\n    enableReinitialize: true,\r\n    validationSchema: loginUserSchema,\r\n    onSubmit: async (values) => {\r\n      const formData = new FormData();\r\n      if (user.id) {\r\n        formData.append(\"advisorId\", user.id);\r\n      }\r\n      formData.append(\"email\", values.email);\r\n      formData.append(\"name\", values.name);\r\n      formData.append(\"intro\", values.intro);\r\n      formData.append(\"location\", values.location);\r\n      formData.append(\"responseRate\", values.responseRate);\r\n      formData.append(\"responseTime\", values.responseTime);\r\n      formData.append(\"dealsAquired\", values.dealsAquired);\r\n      formData.append(\"onNamiSince\", values.onNamiSince);\r\n      formData.append(\"dealsClosed\", values.dealsClosed);\r\n      formData.append(\"shortBio\", values.shortBio);\r\n      formData.append(\"linkedIn\", values.linkedIn);\r\n      formData.append(\"website\", values.website);\r\n      formData.append(\"otherExperience\", values.otherExperience);\r\n      formData.append(\"preferedDealSize\", values.preferedDealSize.value);\r\n      formData.append(\"badges\", values.badges.value);\r\n      formData.append(\r\n        \"expertise\",\r\n        values.expertise?.map((obj) => obj.value)\r\n      );\r\n      formData.append(\"imageUrl\", values.imageUrl);\r\n      if (user.id) {\r\n        dispatch(updateAdviser({ formData, history, formik, setIsLoading }));\r\n      } else {\r\n        dispatch(addAdviserCall({ formData, history, formik, setIsLoading }));\r\n      }\r\n    },\r\n  });\r\n\r\n  console.log(\"values\", formik);\r\n\r\n  const badgesArray = [\r\n    {\r\n      value: \"Top\",\r\n      label: \"Top\",\r\n    },\r\n    {\r\n      value: \"middle\",\r\n      label: \"middle\",\r\n    },\r\n  ];\r\n\r\n  function getPreviousDay(date = new Date()) {\r\n    const previous = new Date(date.getTime());\r\n    previous.setDate(date.getDate() - 1);\r\n    setYesterdayDay(previous);\r\n    return previous;\r\n  }\r\n  useEffect(() => {\r\n    getPreviousDay();\r\n  }, []);\r\n  useEffect(() => {\r\n    setExpertiseState(formik.values.expertise);\r\n    setPreferedDealSizeState(formik.values.preferedDealSize);\r\n    setBadgesState(formik.values.badges);\r\n  }, [formik]);\r\n\r\n  return (\r\n    <div className=\"col-sm-12 p-0\">\r\n      <HeaderAdmin />\r\n      <Container>\r\n        <div className=\"col-sm-12\">\r\n          <div className=\"col-sm-12 border_add_advisor   my-3\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-6 m-auto pt-2 \">\r\n                <h4>{user.id ? \"Edit Advisor\" : \"Add Advisor\"}</h4>\r\n              </div>\r\n              <div className=\"col-sm-4 \"></div>\r\n              <div className=\"col-md-2 pb-1\">\r\n                <Link to=\"/advisorListing\">\r\n                  {\" \"}\r\n                  <Button\r\n                    size={\"sm\"}\r\n                    className=\"button_style_login\"\r\n                    variant=\"outline\"\r\n                  >\r\n                    Back\r\n                  </Button>{\" \"}\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-12\">\r\n          <div className=\"col-sm-12 border_add_advisor  py-4 my-3\">\r\n            <FormikProvider value={formik}>\r\n              <Form noValidate onSubmit={formik.handleSubmit}>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-0\">Advisor name</label>\r\n                    <InputField\r\n                      placeholder=\"Enter adviser name\"\r\n                      name=\"name\"\r\n                      value={formik.values && formik.values.name}\r\n                      onHandleChange={formik.handleChange}\r\n                      error={Boolean(formik.touched.name && formik.errors.name)}\r\n                      helpertext={formik.errors.name}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-0\">Email</label>\r\n                    <InputField\r\n                      placeholder=\"Samantha_Nader@hotmail.com\"\r\n                      name=\"email\"\r\n                      value={formik.values && formik.values.email}\r\n                      onHandleChange={formik.handleChange}\r\n                      error={Boolean(\r\n                        formik.touched.email && formik.errors.email\r\n                      )}\r\n                      helpertext={formik.errors.email}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-0\">Introduction</label>\r\n                    <InputField\r\n                      placeholder=\"Intro\"\r\n                      name=\"intro\"\r\n                      value={formik.values && formik.values.intro}\r\n                      onHandleChange={formik.handleChange}\r\n                      error={Boolean(\r\n                        formik.touched.intro && formik.errors.intro\r\n                      )}\r\n                      helpertext={formik.errors.intro}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-0\">Location</label>\r\n                    <InputField\r\n                      placeholder=\"location\"\r\n                      name=\"location\"\r\n                      value={formik.values && formik.values.location}\r\n                      onHandleChange={formik.handleChange}\r\n                      error={Boolean(\r\n                        formik.touched.location && formik.errors.location\r\n                      )}\r\n                      helpertext={formik.errors.location}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-0\">Response Rate</label>\r\n                    <InputField\r\n                      placeholder=\"responseRate\"\r\n                      name=\"responseRate\"\r\n                      value={formik.values && formik.values.responseRate}\r\n                      onHandleChange={formik.handleChange}\r\n                      error={Boolean(\r\n                        formik.touched.responseRate &&\r\n                          formik.errors.responseRate\r\n                      )}\r\n                      helpertext={formik.errors.responseRate}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-0\">Response Time</label>\r\n                    <InputField\r\n                      placeholder=\"responseTime\"\r\n                      name=\"responseTime\"\r\n                      value={formik.values && formik.values.responseTime}\r\n                      onHandleChange={formik.handleChange}\r\n                      error={Boolean(\r\n                        formik.touched.responseTime &&\r\n                          formik.errors.responseTime\r\n                      )}\r\n                      helpertext={formik.errors.responseTime}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-0\">Deals Aquired</label>\r\n                    <InputField\r\n                      placeholder=\"dealsAquired\"\r\n                      name=\"dealsAquired\"\r\n                      value={formik.values && formik.values.dealsAquired}\r\n                      onHandleChange={formik.handleChange}\r\n                      error={Boolean(\r\n                        formik.touched.dealsAquired &&\r\n                          formik.errors.dealsAquired\r\n                      )}\r\n                      helpertext={formik.errors.dealsAquired}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-0\">Deals Closed</label>\r\n                    <InputField\r\n                      placeholder=\"dealsClosed\"\r\n                      name=\"dealsClosed\"\r\n                      value={formik.values && formik.values.dealsClosed}\r\n                      onHandleChange={formik.handleChange}\r\n                      error={Boolean(\r\n                        formik.touched.dealsClosed && formik.errors.dealsClosed\r\n                      )}\r\n                      helpertext={formik.errors.dealsClosed}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-0\">Short Bio</label>\r\n                    <InputField\r\n                      placeholder=\"shortBio\"\r\n                      name=\"shortBio\"\r\n                      value={formik.values && formik.values.shortBio}\r\n                      onHandleChange={formik.handleChange}\r\n                      error={Boolean(\r\n                        formik.touched.shortBio && formik.errors.shortBio\r\n                      )}\r\n                      helpertext={formik.errors.shortBio}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-0\">LinkedIn Profile Link</label>\r\n                    <InputField\r\n                      placeholder=\"linkedIn\"\r\n                      name=\"linkedIn\"\r\n                      value={formik.values && formik.values.linkedIn}\r\n                      onHandleChange={formik.handleChange}\r\n                      error={Boolean(\r\n                        formik.touched.linkedIn && formik.errors.linkedIn\r\n                      )}\r\n                      helpertext={formik.errors.linkedIn}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-0\">Website</label>\r\n                    <InputField\r\n                      placeholder=\"website\"\r\n                      name=\"website\"\r\n                      value={formik.values && formik.values.website}\r\n                      onHandleChange={formik.handleChange}\r\n                      error={Boolean(\r\n                        formik.touched.website && formik.errors.website\r\n                      )}\r\n                      helpertext={formik.errors.website}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-0\">Other Experience</label>\r\n                    <InputField\r\n                      placeholder=\"otherExperience\"\r\n                      name=\"otherExperience\"\r\n                      value={formik.values && formik.values.otherExperience}\r\n                      onHandleChange={formik.handleChange}\r\n                      error={Boolean(\r\n                        formik.touched.otherExperience &&\r\n                          formik.errors.otherExperience\r\n                      )}\r\n                      helpertext={formik.errors.otherExperience}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-2\">Badges</label>\r\n                    <SelectField\r\n                      placeholder=\"Badges\"\r\n                      name=\"badges\"\r\n                      className=\"basic-multi-select select_field_style\"\r\n                      classNamePrefix=\"select\"\r\n                      values={badgesState}\r\n                      options={badgesArray}\r\n                      handleChange={(e) => {\r\n                        setBadgesState(e);\r\n                        formik.setFieldValue(\"badges\", e);\r\n                      }}\r\n                      error={Boolean(\r\n                        formik.touched.badges && formik.errors.badges\r\n                      )}\r\n                      helpertext={formik.errors.badges}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-2\">Enter Expertise</label>\r\n                    <SelectField\r\n                      isMulti\r\n                      placeholder=\"Enter Expertise\"\r\n                      name=\"expertise\"\r\n                      values={expertiseState}\r\n                      options={adviserDropdownValues?.expertiseList}\r\n                      handleChange={(e) => {\r\n                        setExpertiseState(e);\r\n                        formik.setFieldValue(\"expertise\", e);\r\n                      }}\r\n                      error={Boolean(\r\n                        formik.touched.expertise && formik.errors.expertise\r\n                      )}\r\n                      helpertext={formik.errors.expertise}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-2\">Prefered Deal Size</label>\r\n                    <SelectField\r\n                      placeholder=\"Prefered deal size\"\r\n                      name=\"preferedDealSize\"\r\n                      values={preferedDealSizeState}\r\n                      options={adviserDropdownValues?.prefferedDealSizeList}\r\n                      handleChange={(e) => {\r\n                        setPreferedDealSizeState(e);\r\n                        formik.setFieldValue(\"preferedDealSize\", e);\r\n                      }}\r\n                      error={Boolean(\r\n                        formik.touched.preferedDealSize &&\r\n                          formik.errors.preferedDealSize\r\n                      )}\r\n                      helpertext={formik.errors.preferedDealSize}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-6\">\r\n                    <label className=\"mb-2\">Date</label>\r\n                    <DatePicker\r\n                      maxDetail=\"month\"\r\n                      dayPlaceholder=\"dd\"\r\n                      monthPlaceholder=\"mm\"\r\n                      yearPlaceholder=\"yyyy\"\r\n                      yearAriaLabel=\"Year\"\r\n                      className=\"form-control border_datepicker\"\r\n                      format=\"MM/dd/yyyy\"\r\n                      value={formik.values && formik.values.onNamiSince}\r\n                      minDate={new Date(\"1900-01-01\")}\r\n                      maxDate={yesterdayDay}\r\n                      onChange={(date) =>\r\n                        formik.setFieldValue(\"onNamiSince\", date)\r\n                      }\r\n                    />\r\n                    {formik.touched.onNamiSince && formik.errors.onNamiSince ? (\r\n                      <p className=\"errorMessage\">\r\n                        {formik.errors.onNamiSince}\r\n                      </p>\r\n                    ) : null}\r\n                  </div>\r\n                  <div className=\"col-sm-12 \">\r\n                    <label className=\"mb-2\">Choose Picture</label>\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control chose_field\"\r\n                      name=\"imageUrl\"\r\n                      onChange={(e) => {\r\n                        formik.setFieldValue(\r\n                          \"imageUrl\",\r\n                          e.currentTarget.files[0]\r\n                        );\r\n                      }}\r\n                    />\r\n                    {formik.touched.imageUrl && formik.errors.imageUrl ? (\r\n                      <p className=\"errorMessage\">{formik.errors.imageUrl}</p>\r\n                    ) : null}\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6 mt-2\">\r\n                    <Button\r\n                      size={\"sm\"}\r\n                      className=\"button_style_login\"\r\n                      variant=\"outline\"\r\n                      isLoading={isLoading}\r\n                      onHandleClick={formik.handleSubmit}\r\n                    >\r\n                      {user.id ? \"Edit\" : \"Add\"} Adviser\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              </Form>\r\n            </FormikProvider>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btnDesign\":\"style_btnDesign__VeKbC\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport default function Button(props) {\r\n  const {\r\n    className,\r\n    onHandleClick,\r\n    children,\r\n    variant,\r\n    color,\r\n    type,\r\n    size,\r\n    shape,\r\n    isLoading,\r\n    ...rest\r\n  } = props;\r\n\r\n  const styleClass = classNames(\r\n    `btn ${styles.btnDesign}`,\r\n    variant ? `btn-${variant}-${color}` : `btn-${color}`,\r\n    { [`btn-${size}`]: size },\r\n    shape,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <button\r\n      className={styleClass}\r\n      type={type}\r\n      disabled={isLoading}\r\n      onClick={onHandleClick}\r\n      {...rest}\r\n    >\r\n      {isLoading ? <div class=\"spinner-border\" role=\"status\" /> : children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  onHandleClick: PropTypes.func,\r\n  children: PropTypes.node.isRequired,\r\n  color: PropTypes.string,\r\n  shape: PropTypes.string,\r\n  isLoading: PropTypes.bool,\r\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  variant: PropTypes.oneOf([\"outline\", \"ghost\"]),\r\n};\r\nButton.defaultProps = {\r\n  className: \"\",\r\n  variant: null,\r\n  size: null,\r\n  isLoading: false,\r\n  onHandleClick: () => {},\r\n  color: \"primary\",\r\n  type: \"button\",\r\n  shape: \"rounded-1\",\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputFormDiv\":\"style_inputFormDiv__cgGx+\",\"inputDesign\":\"style_inputDesign__Yz2+T\",\"errorMessage\":\"style_errorMessage__bwbL+\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Text from \"../Text\";\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport default function InputField(props) {\r\n  const {\r\n    placeholder,\r\n    type,\r\n    onHandleChange,\r\n    value,\r\n    name,\r\n    className,\r\n    error,\r\n    disabled,\r\n    helpertext,\r\n    inputFormDiv,\r\n  } = props;\r\n\r\n  return (\r\n    <div className={`${styles.inputFormDiv} ${inputFormDiv}`}>\r\n      <input\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className={`${styles.inputDesign} ${className}`}\r\n        disabled={disabled}\r\n        onChange={onHandleChange}\r\n        value={value}\r\n      />\r\n      {error ? <Text className={styles.errorMessage}>{helpertext}</Text> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nInputField.propTypes = {\r\n  placeholder: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  inputFormDiv: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  helpertext: PropTypes.string,\r\n  error: PropTypes.bool,\r\n  onHandleChange: PropTypes.func,\r\n  type: PropTypes.string,\r\n  value: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nInputField.defaultProps = {\r\n  placeholder: \"\",\r\n  type: \"\",\r\n  value: \"\",\r\n  name: \"\",\r\n  inputFormDiv: \"\",\r\n  onHandleChange: () => {},\r\n  className: null,\r\n  disabled: null,\r\n  helpertext: null,\r\n  error: true,\r\n};\r\n","import InputField from \"./InputField\";\r\n\r\nexport default InputField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Select from \"react-select\";\r\nimport Text from \"../Text\";\r\nimport \"./style.scss\";\r\n\r\nexport default function SelectField(props) {\r\n  const {\r\n    options,\r\n    placeholder,\r\n    isSearchable,\r\n    values,\r\n    name,\r\n    defaultValue,\r\n    handleChange,\r\n    SelectFormDiv,\r\n    helpertext,\r\n    error,\r\n    className,\r\n    isMulti,\r\n  } = props;\r\n\r\n  return (\r\n    <div className={`inputFormDiv ${SelectFormDiv}`}>\r\n      <Select\r\n        isMulti={isMulti}\r\n        name={name}\r\n        defaultValue={defaultValue}\r\n        className={`selectFieldDesign ${className}`}\r\n        options={options}\r\n        value={values}\r\n        placeholder={placeholder}\r\n        // noDataRenderer={() => <p>No data</p>}\r\n        isSearchable={isSearchable}\r\n        onChange={handleChange}\r\n        // defaultMenuIsOpen={true}\r\n      />\r\n      {error ? <Text className=\"errorMessage\">{helpertext}</Text> : null}\r\n    </div>\r\n  );\r\n}\r\nSelectField.defaultProps = {\r\n  options: [\"select\"],\r\n  placeholder: \"select..\",\r\n  name: \"\",\r\n  className: \"\",\r\n  SelectFormDiv: \"\",\r\n  helpertext: \"\",\r\n  isSearchable: false,\r\n  error: true,\r\n  values: [],\r\n  defaultValue: null,\r\n  isMulti: false,\r\n  handleChange: () => {},\r\n};\r\nSelectField.propTypes = {\r\n  options: PropTypes.array,\r\n  values: PropTypes.array,\r\n  placeholder: PropTypes.string,\r\n  SelectFormDiv: PropTypes.string,\r\n  helpertext: PropTypes.string,\r\n  className: PropTypes.string,\r\n  name: PropTypes.string,\r\n  defaultValue: PropTypes.string,\r\n  isSearchable: PropTypes.bool,\r\n  error: PropTypes.bool,\r\n  isMulti: PropTypes.bool,\r\n  handleChange: PropTypes.func,\r\n};\r\n"],"names":["AddAdviserPage","dispatch","useDispatch","user","useParams","history","useHistory","adviserDropdownValues","useSelector","state","Adviser","adviserDropdown","adviser","singleAdviser","useState","badgesState","setBadgesState","expertiseState","setExpertiseState","preferedDealSizeState","setPreferedDealSizeState","yesterdayDay","setYesterdayDay","isLoading","setIsLoading","useEffect","getAllDropdownValueAdviser","id","getSingleAdviser","loginUserSchema","Yup","shape","email","required","name","badges","intro","location","responseRate","responseTime","dealsAquired","preferedDealSize","onNamiSince","dealsClosed","expertise","shortBio","linkedIn","matches","website","otherExperience","imageUrl","when","is","then","formik","useFormik","initialValues","enableReinitialize","validationSchema","onSubmit","values","formData","FormData","append","value","map","obj","updateAdviser","addAdviserCall","console","log","date","Date","previous","getTime","setDate","getDate","getPreviousDay","className","HeaderAdmin","Container","to","Button","size","variant","noValidate","handleSubmit","InputField","placeholder","onHandleChange","handleChange","error","Boolean","touched","errors","helpertext","SelectField","classNamePrefix","options","label","e","setFieldValue","isMulti","expertiseList","prefferedDealSizeList","maxDetail","dayPlaceholder","monthPlaceholder","yearPlaceholder","yearAriaLabel","format","minDate","maxDate","onChange","type","currentTarget","files","onHandleClick","props","children","color","rest","styleClass","classNames","styles","disabled","onClick","class","role","defaultProps","inputFormDiv","Text","isSearchable","defaultValue","SelectFormDiv"],"sourceRoot":""}