{"version":3,"file":"static/js/579.26fc02e1.chunk.js","mappings":"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","sources":["Pages/Auth/Headerauth/Headerauth.js","Pages/Auth/Login/signup.js","Pages/Auth/Login/index.js","Pages/Auth/Login/Login.jsx","webpack://acadify_saas_frontend/./src/Shared/Button/style.module.scss?ba54","Shared/Button/Button.jsx","webpack://acadify_saas_frontend/./src/Shared/InputField/style.module.scss?5e45","Shared/InputField/InputField.jsx","Shared/InputField/index.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import React from 'react'\r\nimport './Headerauth.scss'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\n\r\nfunction Headerauth() {\r\n  let history = useHistory()\r\n  return (\r\n    <div className=\"col-md-12 padding_mobile background_login \">\r\n      {/* // <div\r\n    // onClick={() =>\r\n    //   history.push(`/`)\r\n    // }\r\n    // className='col-sm-12 px-md-5 px-3 pt-4 pb-4 border_bottom_header fixed-top'>\r\n    //     <img src='../images/logo.png' className='img-fluid img_width' />\r\n    //     </div> */}\r\n      <div className=\"col-md-12 background_color_header_public11 py-4 navigation_for_laptop\">\r\n        <div className=\"col-md-12 custome_main_setting_for_every_page \">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-1\">\r\n            <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n              <img className=\"img-fluid logo_width\" src=\"../images/logo.png\" />\r\n              </Link>\r\n            </div>\r\n            <div className=\"col-md-6 text-center m-auto\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                <Link to=\"/\" style={{ textDecoration: \"none\", color:\"black\" }}>\r\n                  <p className=\"mb-0 font_header\">Home</p>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                <Link to=\"/\" style={{ textDecoration: \"none\", color:\"black\" }}>\r\n                  <p className=\"mb-0 font_header\">How it work</p>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                <Link to=\"/\" style={{ textDecoration: \"none\", color:\"black\" }}>\r\n                  <p className=\"mb-0 font_header\">About Us</p>\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                <Link to=\"/getintouch\" style={{ textDecoration: \"none\", color:\"black\" }}>\r\n                  <p className=\"mb-0 font_header\">Contact Us</p>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-5 m-auto text-right\">\r\n              <img className=\"img-fluid\" src=\"../images/avatar.png\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Mobile Navigation  */}\r\n      <div className=\"col-md-12 px-0  navigation_for_mobile\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-6 px-0 col-6\">\r\n          <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n            <img\r\n              className=\"img-fluid logo_width_for_mobile\"\r\n              src=\"../images/logo.png\"\r\n            />\r\n            </Link>\r\n          </div>\r\n          <div className=\"col-md-6 px-0 col-6 text-right\">\r\n            <button className=\"btn btn-light\">\r\n              <i class=\"fas fa-bars\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Headerauth\r\n","import React from \"react\";\r\nimport \"./Login.scss\";\r\nimport { Form, Formik, FormikProvider, useFormik } from \"formik\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { signupuser } from \"../../../Store/Auth/actions\";\r\nimport { useState } from \"react\";\r\n\r\nfunction Signupform() {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n  const [termsAccepted, setTermsAccepted] = useState(false);\r\n  const [termsError, setTermsError] = useState('');\r\n  const validateEmail = () => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      setEmailError('Please enter a valid email address');\r\n      return false;\r\n    }\r\n    setEmailError('');\r\n    return true;\r\n  };\r\n  let history = useHistory();\r\n  const loginUserSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Required\"),\r\n    email: Yup.string()\r\n      //   .email(\"Please enter valid email address\")\r\n      .required(\"Please enter email address\"),\r\n    // password: Yup.string().required(\"Please enter password\"),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: loginUserSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      await dispatch(\r\n        signupuser({\r\n          name: values.name,\r\n          email: values.email,\r\n          password: \"\",\r\n          resetForm: formik.resetForm,\r\n          setIsLoading,\r\n        })\r\n      );\r\n    },\r\n  });\r\n\r\n\r\n  \r\n  const handleClick = () => {\r\n    if (termsAccepted && validateEmail()) {\r\n      // const data = {\r\n      //   name: name,\r\n      //   email: email\r\n      // };\r\n\r\n      dispatch(\r\n        signupuser({\r\n          name: name,\r\n          email: email,\r\n          password: \"\",\r\n          resetForm: formik.resetForm,\r\n          setIsLoading,\r\n        })\r\n      );\r\n\r\n    //  console.log(data)\r\n    }else {\r\n      if (!termsAccepted) {\r\n        setTermsError('Please accept the terms and conditions');\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"col-md-12 px-0\">\r\n          <div className=\"input-group input-group-lg pt-5\">\r\n            <div className=\"input-group-prepend\">\r\n              <button className=\"btn btn-light button_style\" type=\"button\">\r\n                <img\r\n                  className=\"img-fluid icon_width\"\r\n                  src=\"../images/user.png\"\r\n                />\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control input_style_login\"\r\n              placeholder=\"Enter your Name\"\r\n              aria-label=\"\"\r\n              aria-describedby=\"basic-addon1\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n            />\r\n            \r\n          </div>\r\n          <div className=\"input-group input-group-lg pt-4\">\r\n            <div className=\"input-group-prepend\">\r\n              <button className=\"btn btn-light button_style\" type=\"button\">\r\n                <img className=\"img-fluid icon_width\" src=\"../images/msg.png\" />\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"email\"\r\n              className=\"form-control input_style_login\"\r\n              placeholder=\"Enter your Email\"\r\n              aria-label=\"\"\r\n              aria-describedby=\"basic-addon1\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <div className=\"col-md-12 px-0 pt-2\">\r\n            {emailError && <div style={{ color: 'red' }}>{emailError}</div>}\r\n            </div>\r\n          </div>\r\n          {/* <div className=\"input-group input-group-lg pt-4\">\r\n            <div className=\"input-group-prepend\">\r\n              <button className=\"btn btn-light button_style\" type=\"button\">\r\n                <img className=\"img-fluid icon_width\" src=\"../images/key.png\" />\r\n              </button>\r\n            </div>\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control input_style_login\"\r\n              placeholder=\"Enter your password\"\r\n              aria-label=\"\"\r\n              aria-describedby=\"basic-addon1\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={formik.values && formik.values.password}\r\n              onChange={formik.handleChange}\r\n            />\r\n            <div className=\"col-md-12 px-0 pt-2\">\r\n              {formik.touched.password && formik.errors.password && (\r\n                <div className=\"error-message\">{formik.errors.password}</div>\r\n              )}\r\n            </div>\r\n          </div> */}\r\n\r\n          <div className=\"col-md-12 px-1\">\r\n            <div className=\"col-md-12 px-0 pt-3\">\r\n              <div className=\"custom-control custom-checkbox\">\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input custom_radio\"\r\n                  id=\"customCheck1\"\r\n              checked={termsAccepted}\r\n              onChange={(e) => setTermsAccepted(e.target.checked)}\r\n                />\r\n                <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n                  Agree with Terms And Conditions\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 px-0 pt-2\">\r\n          {termsError && <div style={{ color: 'red' }}>{termsError}</div>}\r\n            </div>\r\n          {/* <Link to=\"/mobile-verification\" className=\"link_style_noneactive\"> */}\r\n          <div className=\"col-md-12 px-1 pt-3\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-info w-100 button_style_padding\"\r\n              onClick={handleClick}\r\n            >\r\n              {isLoading ? (\r\n                <div class=\"spinner-border text-light\" role=\"status\">\r\n                  <span class=\"sr-only\">Loading...</span>\r\n                </div>\r\n              ) : (\r\n                <span>Signup</span>\r\n              )}\r\n            </button>\r\n          </div>\r\n          {/* </Link> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signupform;\r\n","import Login from \"./Login\";\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Formik, FormikProvider, useFormik } from \"formik\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport { loginUser } from \"../../../Store/Auth/actions\";\r\nimport Button from \"../../../Shared/Button/Button\";\r\nimport InputField from \"../../../Shared/InputField\";\r\nimport Headerauth from \"../Headerauth/Headerauth\";\r\nimport \"./Login.scss\";\r\nimport Signupform from \"./signup\";\r\n\r\nexport default function Login(props) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [tabswitch, setTabswitch] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const handleclick = () => {\r\n    setTabswitch(!tabswitch);\r\n  };\r\n  let history = useHistory();\r\n\r\n  const loginUserSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Please enter valid email address\")\r\n      .required(\"Please enter email address\"),\r\n    password: Yup.string().required(\"Please enter password\"),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: loginUserSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      await dispatch(\r\n        loginUser({\r\n          email: values.email,\r\n          password: values.password,\r\n          resetForm: formik.resetForm,\r\n          history: history,\r\n          setIsLoading,\r\n        })\r\n      );\r\n    },\r\n  });\r\n  return (\r\n    <div className=\"col-sm-12 background_color_login_signup\">\r\n      <div className=\"col-sm-12\">\r\n        <Headerauth />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 m-auto\">\r\n          {/* tab one  */}\r\n          <div className=\"col-md-12\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-2\"></div>\r\n              {tabswitch ? (\r\n                <>\r\n                  <div className=\"col-md-8\">\r\n                    <div className=\"row\">\r\n                      <div className=\"col-md-6 col-6  text-center border_bottom_active\">\r\n                        <h2>\r\n                          <b>Log In</b>\r\n                        </h2>\r\n                      </div>\r\n                      <div\r\n                        className=\"col-md-6 col-6 text-center\"\r\n                        onClick={handleclick}\r\n                      >\r\n                        <h2 className=\"color_unactive\">\r\n                          <b>Sign up</b>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <FormikProvider value={formik}>\r\n                      <Form\r\n                        noValidate\r\n                        onSubmit={formik.handleSubmit}\r\n                        autoComplete=\"off\"\r\n                      >\r\n                        <div className=\"row\">\r\n                          <div className=\"input-group input-group-lg pt-5 w-100\">\r\n                            <div className=\"input-group-prepend\">\r\n                              <button\r\n                                className=\"btn btn-light button_style\"\r\n                                type=\"button\"\r\n                              >\r\n                                <img\r\n                                  className=\"img-fluid icon_width\"\r\n                                  src=\"../images/msg.png\"\r\n                                />\r\n                              </button>\r\n                            </div>\r\n                            <input\r\n                              autocomplete=\"off\"\r\n                              type=\"email\"\r\n                              required\r\n                              className=\"form-control input_style_login\"\r\n                              placeholder=\"Enter your Email\"\r\n                              id=\"email\"\r\n                              name=\"email\"\r\n                              value={formik.values && formik.values.email}\r\n                              onChange={formik.handleChange}\r\n                              error={Boolean(\r\n                                formik.touched.email && formik.errors.email\r\n                              )}\r\n                              helpertext={formik.errors.email}\r\n                            />\r\n                          </div>\r\n                          <div className=\"input-group input-group-lg pt-4\">\r\n                            <div className=\"input-group-prepend\">\r\n                              <button\r\n                                className=\"btn btn-light button_style\"\r\n                                type=\"button\"\r\n                              >\r\n                                <img\r\n                                  className=\"img-fluid icon_width\"\r\n                                  src=\"../images/key.png\"\r\n                                />\r\n                              </button>\r\n                            </div>\r\n                            <input\r\n                              autocomplete=\"off\"\r\n                              required\r\n                              type=\"password\"\r\n                              className=\"form-control input_style_login\"\r\n                              placeholder=\"Enter your Password\"\r\n                              id=\"password\"\r\n                              name=\"password\"\r\n                              value={formik.values && formik.values.password}\r\n                              onChange={formik.handleChange}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                          <div className=\"col-md-6 px-0 pt-3\">\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                className=\"custom-control-input custom_radio\"\r\n                                id=\"customCheck1\"\r\n                              />\r\n                              <label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"customCheck1\"\r\n                              >\r\n                                Remember me\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"col-md-6 pt-3 px-0 text-right\">\r\n                            <h6 className=\"text_color_forget\">\r\n                              Forget Password\r\n                            </h6>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"row pt-2\">\r\n                          <button\r\n                            type=\"submit\"\r\n                            className=\"btn btn-info w-100 button_style_padding\"\r\n                            isLoading={isLoading}\r\n                            onHandleClick={formik.handleSubmit}\r\n                          >\r\n                            {isLoading ? (\r\n                              <div\r\n                                class=\"spinner-border text-light\"\r\n                                role=\"status\"\r\n                              >\r\n                                <span class=\"sr-only\">Loading...</span>\r\n                              </div>\r\n                            ) : (\r\n                              <span>Login</span>\r\n                            )}\r\n                          </button>\r\n                        </div>\r\n                      </Form>\r\n                    </FormikProvider>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <div className=\"col-md-8\">\r\n                    <div className=\"row\">\r\n                      <div\r\n                        className=\"col-md-6  col-6 text-center \"\r\n                        onClick={handleclick}\r\n                      >\r\n                        <h2 className=\"color_unactive\">\r\n                          <b>Log In</b>\r\n                        </h2>\r\n                      </div>\r\n                      <div className=\"col-md-6  col-6 text-center border_bottom_active\">\r\n                        <h2>\r\n                          <b>Sign up</b>\r\n                        </h2>\r\n                      </div>\r\n                    </div>\r\n                    <Signupform />\r\n                  </div>\r\n                </>\r\n              )}\r\n\r\n              <div className=\"col-md-2\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6 pt-5 display_sidepannel_none\">\r\n          <h1 className=\"pt-5\">\r\n            <b>Welcome!</b>\r\n          </h1>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <h6>\r\n                Welcome to Second Opinion app. We will provide you assistance in\r\n                all health related problems\r\n              </h6>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-md-12 pt-3\">\r\n            <img className=\"img-fluid\" src=\"../images/people.png\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btnDesign\":\"style_btnDesign__lfXDz\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport default function Button(props) {\r\n  const {\r\n    className,\r\n    onHandleClick,\r\n    children,\r\n    variant,\r\n    color,\r\n    type,\r\n    size,\r\n    shape,\r\n    isLoading,\r\n    ...rest\r\n  } = props;\r\n\r\n  const styleClass = classNames(\r\n    `btn ${styles.btnDesign}`,\r\n    variant ? `btn-${variant}-${color}` : `btn-${color}`,\r\n    { [`btn-${size}`]: size },\r\n    shape,\r\n    className\r\n  );\r\n\r\n  return (\r\n    <button\r\n      className={styleClass}\r\n      type={type}\r\n      disabled={isLoading}\r\n      onClick={onHandleClick}\r\n      {...rest}\r\n    >\r\n      {isLoading ? <div class=\"spinner-border\" role=\"status\" /> : children}\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  onHandleClick: PropTypes.func,\r\n  children: PropTypes.node.isRequired,\r\n  color: PropTypes.string,\r\n  shape: PropTypes.string,\r\n  isLoading: PropTypes.bool,\r\n  size: PropTypes.oneOf([\"sm\", \"lg\"]),\r\n  type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\r\n  variant: PropTypes.oneOf([\"outline\", \"ghost\"]),\r\n};\r\nButton.defaultProps = {\r\n  className: \"\",\r\n  variant: null,\r\n  size: null,\r\n  isLoading: false,\r\n  onHandleClick: () => {},\r\n  color: \"primary\",\r\n  type: \"button\",\r\n  shape: \"rounded-1\",\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"inputFormDiv\":\"style_inputFormDiv__xrwqt\",\"inputDesign\":\"style_inputDesign__RI4YD\",\"errorMessage\":\"style_errorMessage__ODQ9b\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Text from \"../Text\";\r\nimport styles from \"./style.module.scss\";\r\n\r\nexport default function InputField(props) {\r\n  const {\r\n    placeholder,\r\n    type,\r\n    onHandleChange,\r\n    value,\r\n    name,\r\n    className,\r\n    error,\r\n    disabled,\r\n    helpertext,\r\n    inputFormDiv,\r\n  } = props;\r\n\r\n  return (\r\n    <div className={`${styles.inputFormDiv} ${inputFormDiv}`}>\r\n      <input\r\n        type={type}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        className={`${styles.inputDesign} ${className}`}\r\n        disabled={disabled}\r\n        onChange={onHandleChange}\r\n        value={value}\r\n      />\r\n      {error ? <Text className={styles.errorMessage}>{helpertext}</Text> : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nInputField.propTypes = {\r\n  placeholder: PropTypes.string.isRequired,\r\n  className: PropTypes.string,\r\n  inputFormDiv: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  helpertext: PropTypes.string,\r\n  error: PropTypes.bool,\r\n  onHandleChange: PropTypes.func,\r\n  type: PropTypes.string,\r\n  value: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n\r\nInputField.defaultProps = {\r\n  placeholder: \"\",\r\n  type: \"\",\r\n  value: \"\",\r\n  name: \"\",\r\n  inputFormDiv: \"\",\r\n  onHandleChange: () => {},\r\n  className: null,\r\n  disabled: null,\r\n  helpertext: null,\r\n  error: true,\r\n};\r\n","import InputField from \"./InputField\";\r\n\r\nexport default InputField;\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useHistory","className","to","style","textDecoration","src","color","class","dispatch","useDispatch","useState","isLoading","setIsLoading","name","setName","email","setEmail","emailError","setEmailError","termsAccepted","setTermsAccepted","termsError","setTermsError","loginUserSchema","Yup","shape","required","formik","useFormik","initialValues","password","enableReinitialize","validationSchema","onSubmit","values","signupuser","resetForm","type","placeholder","id","value","onChange","e","target","checked","htmlFor","onClick","test","role","props","tabswitch","setTabswitch","handleclick","history","loginUser","Headerauth","noValidate","handleSubmit","autoComplete","autocomplete","handleChange","error","Boolean","touched","errors","helpertext","onHandleClick","Button","children","variant","size","rest","styleClass","classNames","styles","disabled","defaultProps","InputField","onHandleChange","inputFormDiv","Text","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}