{"version":3,"file":"static/js/105.237e6956.chunk.js","mappings":"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","sources":["Pages/AdminPages/ChatAdmin/ChatAdmin.js"],"sourcesContent":["import React, { useLayoutEffect, useRef, useState } from 'react'\r\nimport \"./ChatAdmin.css\"\r\nimport { useEffect } from 'react'\r\nimport Axios from 'axios';\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\nimport { useSelector } from 'react-redux';\r\nimport { IoIosSend } from \"react-icons/io\";\r\nimport { MdOutlineCancelScheduleSend } from \"react-icons/md\";\r\n\r\nconst ChatAdmin = () => {\r\n  const [messagein, setMessagein] = useState(\"\");\r\n  const [chatresponsedata, setChatresponsedata] = useState([])\r\n  const [scrollmanage, setScrollManage] = useState(false)\r\n  const [messageresponse, setMessageresponse] = useState(\"\")\r\n  const [Lodingmessage, setLoadingmessage] = useState(false);\r\n  const [getuserdata, setgetuserdata] = useState(\"\");\r\n  const [gettingchatdataparsenew, setgettingchatdataparse] = useState(\"\");\r\n  const [Newobjectdata, setNewobjectdata] = useState({});\r\n  const containerRef = useRef(null);\r\n\r\n\r\n  const [Questions, setQuestions] = useState([])\r\n  const [Answers, setAnswers] = useState([])\r\n  const user = useSelector((state) => state?.Auth?.user?.id);\r\n\r\n  useEffect(() => {\r\n    const gwttinguserdata = localStorage.getItem(\"userId\");\r\n    const gettingchatdata = localStorage.getItem(\"chatdetail\");\r\n    const gwttinguserdataparse = parseInt(gwttinguserdata);\r\n    const gettingchatdataparsenew = JSON.parse(gettingchatdata);\r\n\r\n    setgetuserdata(gwttinguserdataparse);\r\n    setgettingchatdataparse(gettingchatdataparsenew)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getdocuments = JSON.parse(localStorage.getItem(\"chat_pictures_fr_chat\"))\r\n    const questionsanswers = JSON.parse(localStorage.getItem(\"Questions_fr_chat\"))\r\n    setQuestions(getdocuments)\r\n    setAnswers(questionsanswers)\r\n  }, [])\r\n\r\n\r\n  console.log(\"gettingchatdataparsenew\", gettingchatdataparsenew)\r\n\r\n  useLayoutEffect(() => {\r\n\r\n    const container = containerRef.current;\r\n    if (container) {\r\n      container.scrollTo({\r\n        top: container.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n\r\n  }, [messagein, scrollmanage]);\r\n\r\n  const handlePostRequest = async () => {\r\n    setLoadingmessage(true);\r\n    try {\r\n      // Generate dynamic data here\r\n      const postData = {\r\n        userId: getuserdata,\r\n        chat: gettingchatdataparsenew?.request_chat_id,\r\n        doctor: user,\r\n        doctor_question: messagein,\r\n        response_type: \"doctor\"\r\n      };\r\n\r\n      const response = await Axios.post('https://api.backend.h3lth.net/doctor-chat/api/thread/doctorpost', postData);\r\n      console.log('Response from server:', response.data);\r\n      setMessageresponse(response.data)\r\n      setMessagein(\"\")\r\n      setLoadingmessage(false);\r\n      // Handle the response as needed\r\n    } catch (error) {\r\n      console.error('Error making POST request:', error.message);\r\n      setLoadingmessage(false);\r\n      // Handle the error as needed\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleGetRequest = async () => {\r\n      try {\r\n        const response = await Axios.get(`https://api.backend.h3lth.net/doctor-chat/api/thread/doctorget?chatId=${gettingchatdataparsenew?.request_chat_id}&doctor=${user}`);\r\n        console.log('Response from server:', response.data.data);\r\n        setChatresponsedata(response.data.data);\r\n        setScrollManage(!scrollmanage)\r\n        // setResponseData(response.data);\r\n        // Handle the response as needed\r\n      } catch (error) {\r\n        console.error('Error making GET request:', error.message);\r\n        // Handle the error as needed\r\n      }\r\n    };\r\n    handleGetRequest();\r\n    const intervalId = setInterval(() => {\r\n      handleGetRequest();\r\n    }, 2000);\r\n    return () => clearInterval(intervalId);\r\n  }, [messageresponse, gettingchatdataparsenew?.request?.doctors[0], gettingchatdataparsenew?.request_chat_id, user])\r\n\r\n\r\n  useEffect(() => {\r\n    const localdata = localStorage.getItem(\"userviewticket\");\r\n    setNewobjectdata(JSON.parse(localdata))\r\n  }, [])\r\n\r\n\r\n  console.log(\"chatresponsedata\", chatresponsedata);\r\n  console.log(\"Newobjectdata\", Newobjectdata)\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handlePostRequest();\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className='col-md-12 background_chat_main '>\r\n      <div className='row px-3 py-4'>\r\n        <div className='col-md-12 height_of_chat2'>\r\n          <div className='col-md-12 background_chat_head'>\r\n            <div className='col-md-12 py-2'>\r\n              <div className='row'>\r\n                <div className='col-md-1 px-0'>\r\n                  <img className='img-fluid rounded-circle  img_height_width' src='/images/avatar.webp' />\r\n                </div>\r\n                <div className='col-md-2 pt-4 px-0'> <p className='m-0 p-0 name_person'> {gettingchatdataparsenew?.request?.request?.mainuser?.user?.name} </p></div>\r\n                <div className='col-md-9 m-auto'>\r\n                  {Questions?.map((item, index) => {\r\n                    console.log(\"item\", Questions)\r\n                    return (\r\n                      <a href={`${item}`} target='_blank' className='text_dec_none'>\r\n                        <img className='img-fluid height_of_chat_pic' src={`${item}`} />\r\n                      </a>\r\n                    )\r\n                  })}\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-12 background_chat_head mt-2'>\r\n            <div className='col-md-12 py-2'>\r\n              <div className='row'>\r\n                <div className='col-md-3 px-0'> <p className='m-0 p-0 name_person'>Gender :</p><span>\r\n                  {Newobjectdata?.request?.is_sub_user === false ?\r\n                    <>{Newobjectdata?.request?.mainuser?.gender} </> :\r\n                    <>{Newobjectdata?.request?.user?.gender} </>\r\n                  }\r\n                </span></div>\r\n                <div className='col-md-3 px-0'> <p className='m-0 p-0 name_person'>Date & Time :</p><span>\r\n                  <Moment format=\"YYYY-MM-DD / HH:mm:ss A\" >\r\n                    {Newobjectdata?.created_date}\r\n                  </Moment>\r\n                </span></div>\r\n                <div className='col-md-3 px-0'> <p className='m-0 p-0 name_person'>Form Title :</p><span>\r\n                  {Newobjectdata?.request?.form?.title}\r\n                </span></div>\r\n                <div className='col-md-3 px-0'> <p className='m-0 p-0 name_person'>Height :</p><span>\r\n                  {Newobjectdata?.request?.is_sub_user === false ?\r\n                    <>{Newobjectdata?.request?.mainuser?.height} {Newobjectdata?.request?.mainuser?.height_unit} </> :\r\n                    <>{Newobjectdata?.request?.user?.height} {Newobjectdata?.request?.user?.height_unit} </>\r\n                  }\r\n                </span></div>\r\n                <div className='col-md-3 mt-2 px-0'> <p className='m-0 p-0 name_person'>Catagory :</p><span> {Newobjectdata?.request?.form?.category?.title}</span></div>\r\n                <div className='col-md-3 mt-2 px-0'> <p className='m-0 p-0 name_person'>Weight :</p><span>\r\n                  {Newobjectdata?.request?.is_sub_user === false ?\r\n                    <>{Newobjectdata?.request?.mainuser?.weight} {Newobjectdata?.request?.mainuser?.weight_unit}</> :\r\n                    <>{Newobjectdata?.request?.user?.weight} {Newobjectdata?.request?.user?.weight_unit}</>\r\n                  }\r\n                </span></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className='col-md-12 height_of_msg py-4 px-2' id='style-3' ref={containerRef}>\r\n            <div className='row'>\r\n\r\n\r\n              {Answers?.map((item, index) => {\r\n\r\n                return (\r\n                  <>\r\n                    {item?.typeQ !== \"Document\" ? (\r\n                      <React.Fragment key={index}>\r\n                        <div className='col-md-6'>\r\n                          <div className='col-md-12 color_blue_text1'>\r\n                            <h6 className='mt-3  px-3 py-2 mb-1'><b>Question: </b>{item?.question?.question}</h6>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6'>\r\n                        </div>\r\n                      </React.Fragment>\r\n                    ) : null}\r\n                    {item?.typeQ === \"Document\" ?\r\n                      <>\r\n                      </>\r\n                      :\r\n                      <>\r\n                        <div className='col-md-6'>\r\n                          <div className='col-md-12 color_blue_text1'>\r\n                            <h6 className='mt-3 px-3 py-2 mb-1 '><b>Answer: </b>{item?.answer}</h6>\r\n                          </div>\r\n                        </div>\r\n                        <div className='col-md-6'>\r\n                        </div>\r\n                      </>\r\n                    }\r\n                  </>\r\n                )\r\n              })}\r\n            </div>\r\n            {chatresponsedata?.map((index, item) => {\r\n              console.log(\"indexx12\", index)\r\n              return (\r\n                <>\r\n                  {index?.patient_answer &&\r\n                    <div className='row'>\r\n                      <div className='col-md-6'>\r\n                        <div className='col-md-12 color_blue_text1 mt-2'>\r\n                          <h6 className='mt-2  px-3 py-2 '>{index.patient_answer}</h6>\r\n                        </div>\r\n                      </div>\r\n                      <div className='col-md-6'>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                  {index?.doctor_question && index?.patient_answer === null &&\r\n                    <div className='row'>\r\n                      <div className='col-md-6'>\r\n                      </div>\r\n                      <div className='col-md-6  '>\r\n                        <div className='col-md-12 color_blue_text py-1 mt-2'>\r\n                          <h6 className=' mt-2 rounded-pill '><span className=' px-3 py-1 mt-3 ' >{index?.doctor_question}</span></h6>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  }\r\n                </>\r\n              )\r\n            })}\r\n\r\n          </div>\r\n          <div className='col-md-12 bg-white py-2 input_bottom d-flex'>\r\n            <input disabled={Lodingmessage} className='form-control new_place_holder w-100' onKeyDown={messagein.length != 0 && handleKeyDown} value={messagein} onChange={(e) => setMessagein(e.target.value)} placeholder='Enter message here' />\r\n            {messagein.length === 0 ?\r\n              <button className='btn btn-primary ml-2' disabled >{Lodingmessage === false ? <MdOutlineCancelScheduleSend /> :\r\n                <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                </div>\r\n\r\n              }</button>\r\n              :\r\n              <button className='btn btn-primary ml-2' onClick={handlePostRequest}>{Lodingmessage === false ? <IoIosSend /> :\r\n                <div className=\"spinner-border spinner-border-sm text-white\" role=\"status\">\r\n                </div>\r\n\r\n              }</button>\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ChatAdmin"],"names":["useState","messagein","setMessagein","chatresponsedata","setChatresponsedata","scrollmanage","setScrollManage","messageresponse","setMessageresponse","Lodingmessage","setLoadingmessage","getuserdata","setgetuserdata","gettingchatdataparsenew","setgettingchatdataparse","Newobjectdata","setNewobjectdata","containerRef","useRef","Questions","setQuestions","Answers","setAnswers","user","useSelector","state","Auth","id","useEffect","gwttinguserdata","localStorage","getItem","gettingchatdata","gwttinguserdataparse","parseInt","JSON","parse","getdocuments","questionsanswers","console","log","useLayoutEffect","container","current","scrollTo","top","scrollHeight","behavior","handlePostRequest","postData","userId","chat","request_chat_id","doctor","doctor_question","response_type","Axios","response","data","error","message","handleGetRequest","intervalId","setInterval","clearInterval","request","doctors","localdata","className","src","mainuser","name","map","item","index","href","target","is_sub_user","gender","format","created_date","form","title","height","height_unit","category","weight","weight_unit","ref","typeQ","question","answer","patient_answer","disabled","onKeyDown","length","e","key","value","onChange","placeholder","role","onClick"],"sourceRoot":""}